"""
PEP 8

Functions, variables, and attributes: lowercase_underscore
Protected instance attributes: _leading_underscore
Private instance attributes: __double_leading_underscore
Classes and exceptions: CapitalizedWord
Module-level constans: ALL_CAPS
Class methods should use cls as the name of the first parameter

inline negation: (if a is not b)
Don't check for empty values by checking length: use (if not somelist) and assume empty values evaluation to False
Should always do absolute imports; if relative imports are required, do (from . import foo)
Import order: standard library, third-party, your own; subsections should be alphabetical
"""

"""Using helper functions.  The following uses the 'empty evaluates to false' magic..."""
my values = parse_qs('red=5&blue=0&green=', keep_blank_values=True)
red = int(myvalues.get('red', [''])[0] or 0)
green = int(myvalues.get('green', [''])[0] or 0)
opactiy = int(myvalues.get('opactiy', [''])[0] or 0)
# however, it should be made clearer by turning the above into a function



"""
Using .format
"""
def __str__(self):
	return ‘{} {}, HP: {}, XP: {}’.format(self.color.title(),
	    self.__class__.__name__,
	    self.hit_points,
	    self.experience)
